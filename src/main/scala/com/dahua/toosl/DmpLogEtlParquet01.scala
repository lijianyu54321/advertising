package com.dahua.toosl

import com.dahua.utils.NumFormat
import org.apache.spark.rdd.RDD
import org.apache.spark.sql.SparkSession
import org.apache.spark.{SparkConf, SparkContext}

object DmpLogEtlParquet01 {
  def main(args: Array[String]): Unit = {
    if (args.length != 2) {
      println("缺少参数")
      sys.exit(0)
      //      System.exit(0)
    }
    var Array(inputPath, outputPath) = args
    //TODO  Kryo 序列化
    val sparkConf = new SparkConf().setMaster("local[*]").setAppName("DmpLogEtlParquet")
//      .set("spark.serializer", "org.apache.spark.serializer.KryoSerializer")
//              sparkConf.registerKryoClasses(Array(classOf[LogBean]))
    val spark = SparkSession.builder().config(sparkConf).getOrCreate()
    val sc: SparkContext = spark.sparkContext
    import spark.implicits._
    val logdata: RDD[Array[String]] = sc.textFile(inputPath).map(_.split(",", -1)).filter(_.length >= 85)

    val df  = logdata.map(arr => {
       LogBean1(arr(0),
        NumFormat.toInt(arr(1)),
        NumFormat.toInt(arr(2)),
        NumFormat.toInt(arr(3)),
        NumFormat.toInt(arr(4)),
        arr(5),
        arr(6),
        NumFormat.toInt(arr(7)),
        NumFormat.toInt(arr(8)),
        NumFormat.toDouble(arr(9)),
        NumFormat.toDouble(arr(10)),
        arr(11),
        arr(12),
        arr(13),
        arr(14),
        arr(15),
        arr(16),
        NumFormat.toInt(arr(17)),
        arr(18),
        arr(19),
        NumFormat.toInt(arr(20)),
        NumFormat.toInt(arr(21)),
        arr(22),
        arr(23),
        arr(24),
        arr(25),
        NumFormat.toInt(arr(26)),
        arr(27),
        NumFormat.toInt(arr(28)),
        arr(29),
        NumFormat.toInt(arr(30)),
        NumFormat.toInt(arr(31)),
        NumFormat.toInt(arr(32)),
        arr(33),
        NumFormat.toInt(arr(34)),
        NumFormat.toInt(arr(35)),
        NumFormat.toInt(arr(36)),
        arr(37),
        NumFormat.toInt(arr(38)),
        NumFormat.toInt(arr(39)),
        NumFormat.toDouble(arr(40)),
        NumFormat.toDouble(arr(41)),
        NumFormat.toInt(arr(42)),
        arr(43),
        NumFormat.toDouble(arr(44)),
        NumFormat.toDouble(arr(45)),
        arr(46),
        arr(47),
        arr(48),
        arr(49),
        arr(50),
        arr(51),
        arr(52),
        arr(53),
        arr(54),
        arr(55),
        arr(56),
        NumFormat.toInt(arr(57)),
        NumFormat.toDouble(arr(58)),
        NumFormat.toInt(arr(59)),
        NumFormat.toInt(arr(60)),
        arr(61),
        arr(62),
        arr(63),
        arr(64),
        arr(65),
        arr(66),
        arr(67),
        arr(68),
        arr(69),
        arr(70),
        arr(71),
        arr(72),
        NumFormat.toInt(arr(73)),
        NumFormat.toDouble(arr(74)),
        NumFormat.toDouble(arr(75)),
        NumFormat.toDouble(arr(76)),
        NumFormat.toDouble(arr(77)),
        NumFormat.toDouble(arr(78)),
        arr(79),
        arr(80),
        arr(81),
        arr(82),
        arr(83),
        NumFormat.toInt(arr(84)))
    }).toDF()
   df.write.parquet(outputPath)

    spark.stop()
    sc.stop()

  }

}

case class LogBean1(
                    var sessionid: String,
                    var advertisersid: Int,
                    var adorderid: Int,
                    var adcreativeid: Int,
                    var adplatformproviderid: Int,
                    var sdkversion: String,
                    var adplatformkey: String,
                    var putinmodeltype: Int,
                    var requestmode: Int,
                    var adprice: Double,
                    var adppprice: Double,
                    var requestdate: String,
                    var ip: String,
                    var appid: String,
                    var appname: String,
                    var uuid: String,
                    var device: String,
                    var client: Int,
                    var osversion: String,
                    var density: String,
                    var pw: Int,
                    var ph: Int,
                    var longitude: String,
                    var lat: String,
                    var provincename: String,
                    var cityname: String,
                    var ispid: Int,
                    var ispname: String,
                    var networkmannerid: Int,
                    var networkmannername: String,
                    var iseffective: Int,
                    var isbilling: Int,
                    var adspacetype: Int,
                    var adspacetypename: String,
                    var devicetype: Int,
                    var processnode: Int,
                    var apptype: Int,
                    var district: String,
                    var paymode: Int,
                    var isbid: Int,
                    var bidprice: Double,
                    var winprice: Double,
                    var iswin: Int,
                    var cur: String,
                    var rate: Double,
                    var cnywinprice: Double,
                    var imei: String,
                    var mac: String,
                    var idfa: String,
                    var openudid: String,
                    var androidid: String,
                    var rtbprovince: String,
                    var rtbcity: String,
                    var rtbdistrict: String,
                    var rtbstreet: String,
                    var storeurl: String,
                    var realip: String,
                    var isqualityapp: Int,
                    var bidfloor: Double,
                    var aw: Int,
                    var ah: Int,
                    var imeimd5: String,
                    var macmd5: String,
                    var idfamd5: String,
                    var openudidmd5: String,
                    var androididmd5: String,
                    var imeisha1: String,
                    var macsha1: String,
                    var idfasha1: String,
                    var openudidsha1: String,
                    var androididsha1: String,
                    var uuidunknow: String,
                    var userid: String,
                    var iptype: Int,
                    var initbidprice: Double,
                    var adpayment: Double,
                    var agentrate: Double,
                    var lomarkrate: Double,
                    var adxrate: Double,
                    var title: String,
                    var keywords: String,
                    var tagid: String,
                    var callbackdate: String,
                    var channelid: String,
                    var mediatype: Int
                  )
